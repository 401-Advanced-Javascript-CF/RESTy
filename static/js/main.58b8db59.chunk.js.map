{"version":3,"sources":["footer/footer.js","header/header.js","crud/crud.js","results/results.js","history/history.js","app/App.js","index.js"],"names":["Footer","href","Header","Crud","results","isStorage","setStorage","method","setMethod","url","setUrl","body","setBody","headers","setHeaders","handleChange","e","a","preventDefault","console","log","target","name","value","fetch","mode","getResponse","json","getData","undefined","getStorage","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","type","onChange","Results","data","id","History","storage","items","handleClick","innerText","split","map","item","i","onClick","App","useState","list","setList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58b8db59.chunk.js","sourcesContent":["import React from 'react';\nimport './footer.scss';\n\nfunction Footer(){\n    return (\n        <footer>\n        <p>Author: Bryant Davis</p>\n        <a href=\"mailto:bryant.davis@hotmail.com\">Email</a>\n        </footer>\n    )\n}\n\nexport default Footer;","// import react from 'react';\nimport './header.scss';\n\nfunction Header(){\n    return (\n        <header>\n            <h1>RESTy</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './crud.scss';\n\nfunction Crud({results, isStorage, setStorage, method, setMethod, url, setUrl, body, setBody, headers, setHeaders}){\n\n\nasync function handleChange(e) {\n    e.preventDefault();\n    console.log(url);\n    const {name, value} = e.target\n    if(name === 'url'){\n      await setUrl(value);\n    }\n    else if(name === 'headers'){\n        await setHeaders(value);\n    }\n    else if(name === 'body'){\n        await setBody(value);\n    }\n    else if(name === 'method'){\n        await setMethod(value);\n    }\n    // setText(url);\n}\n\nasync function addCrud(e){\n    e.preventDefault();\n        let getResponse = await fetch(url, {\n            mode: 'cors',\n            method,\n            body,\n            headers,\n        });\n        let getData = await getResponse.json();\n        // console.log(getData);\n        // props.results(getData)\n        await results(getData);\n        await setBody(undefined);\n        if(isStorage){\n            let getStorage = JSON.parse(localStorage.getItem('method'));\n            getStorage = [...getStorage, {url, method}];\n            localStorage.setItem('method', JSON.stringify(getStorage));\n        }\n        else{\n            localStorage.setItem('method', JSON.stringify([{url, method}]));\n        }\n        await setStorage(true);\n\n}\n\nreturn (\n    <div>\n            <form onSubmit={addCrud}>\n                URL:<input type=\"text\" name=\"url\" onChange={handleChange} value={url}/><br/>\n                HEADERS: <textarea type=\"text\" name=\"headers\" value={headers} onChange={handleChange}></textarea>\n                BODY: <textarea type=\"text\" name=\"body\" value={body} onChange={handleChange}></textarea>\n                <select name=\"method\" onChange={handleChange}>\n                    <option value={method}>{method}</option>\n                    <option value=\"POST\">POST</option>\n                    <option value=\"GET\">GET</option>\n                    <option value=\"DELETE\">DELETE</option>\n                    <option value=\"PUT\">PUT</option>\n                </select>\n                {/* <button onClick={handleChange} name='method' value='POST'>POST</button>\n                <button onClick={handleChange} name='method' value='PUT'>PUT</button>\n                <button onClick={handleChange} name='method' value='GET'>GET</button>\n                <button onClick={handleChange} name='method' value='DELETE'>DELETE</button><br/> */}\n                <button type='submit'>GO</button>\n            </form>\n<h3>{url} {method}</h3>\n    </div>\n)\n\n}\n\nexport default Crud;\n","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\n\nfunction Results({results}){\n    let data;\n    if(results){\n        data = <JSONPretty id=\"json-pretty\" data={results}></JSONPretty>;\n    }\n    \n    return(\n        <ul>\n            {data}\n        </ul>\n    )\n}\n\nexport default Results;","import React from 'react';\n\n\nfunction History({storage, isStorage, setMethod, setUrl}){\n    let items = 'No History';\n\n    async function handleClick(e){\n        let results = e.target.innerText.split(':');\n        let method = results[1].split(' ')[0];\n        let url = results[2].split(' ')[1] + results[3] + results[4];\n        await setMethod(method);\n        await setUrl(url);\n\n    }    \n\n    if(isStorage){\n    items = storage('method').map((item, i) => <button key={i} onClick={handleClick}>Method:{item.method} Url: {item.url}</button>);\n    }\n    \n    return (\n    <ul id=\"ul\">\n        {items}\n    </ul>\n    )\n}\n\nexport default History;","import React, {useState} from 'react';\nimport Footer from '../footer/footer.js';\nimport Header from '../header/header.js';\nimport Crud from '../crud/crud.js';\nimport Results from '../results/results.js';\nimport History from '../history/history.js';\n\nfunction App() {\n  const [list, setList] = useState(false);\n  const [storage, setStorage] = useState(false);\n  const [url, setUrl] = useState('');\n  const [method, setMethod] = useState('');\n  const [headers, setHeaders] = useState(undefined);\n  const [body, setBody] = useState(undefined);\n\n  function getStorage(name){\n    return JSON.parse(localStorage.getItem(name))\n  }\n  return (\n    <div>\n    <Header />\n    <Crud \n    results={setList}\n    isStorage={storage}\n    setStorage={setStorage}\n    method={method}\n    setMethod={setMethod}\n    url={url}\n    setUrl={setUrl}\n    body={body}\n    setBody={setBody}\n    headers={headers}\n    setHeaders={setHeaders}\n     />\n    <Results\n    results={list}\n    />\n    <History\n    storage={getStorage}\n    isStorage={storage}\n    setMethod={setMethod}\n    setUrl={setUrl}\n    />\n    <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}